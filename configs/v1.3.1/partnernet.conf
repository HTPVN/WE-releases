node {
  waves-crypto = yes

  directory = "/node"
  data-directory = ${node.directory}"/data"

  # Node owner address
  owner-address = " /FILL/ "

  wallet {
    file = "/node/keystore.dat"
    password = " /FILL/ "
  }

  ntp.fatal-timeout = 5 minute

  # Blockchain settings
  blockchain {
    type = CUSTOM
    consensus {
      type = "poa"
      round-duration = "17s"
      sync-duration = "3s"
      ban-duration-blocks = 50
      warnings-for-ban = 10
      max-bans-percentage = 40
    }
    custom {
      address-scheme-character = "P"
      functionality {
        feature-check-blocks-period = 1500
        blocks-for-feature-activation = 1000
        pre-activated-features = {2 = 0, 3 = 0, 4 = 0, 5 = 0, 6 = 0, 7 = 0, 9 = 0, 10 = 0, 100 = 0}
      }
      genesis {
        average-block-delay: 60s
        initial-base-target: 153722867
        block-timestamp: 1577449414054
        initial-balance: 40000000000000000
        genesis-public-key-base-58: "9Gm4Dy5Awr9TPWPMNzHTxmUdovKpA67DHmh53NPgSjdK"
        signature: "3jV3HxkfAcLpittYriMJfkNrEU9VxWnLPifg63gwthcnTupt4h3LUqEYAg1MThLsAA1fVEQW3aYK5DaePvCt2a7H"
        transactions = [
          {recipient: "3LWg4n6VmN6DKBSwGF1hwnaCzXdjMkQCFrn", amount: 10000000000000000},
          {recipient: "3LPPZNhakdm9ZPiGShNvWGCshFqsQXFjUQ1", amount: 10000000000000000},
          {recipient: "3LEpXfh7XmCRias92swo6LUJqyo9MA7SaFc", amount: 10000000000000000},
          {recipient: "3LNYDaB5oqsBJ65SBG3ScWA8cTwNVP7Emw1", amount: 10000000000000000}
        ]
        network-participants = [
          {public-key: "CaFrRzAv7B3DrECR4i2Los1DwxHj4yKAEKCT3zEke9U4", roles: [permissioner, miner, connection_manager, contract_developer, issuer]},
          {public-key: "Vxb6LQ8Qt9Afs6VJuyiMbMN5qM2pm1EEcWdoZo3WmkN", roles: [miner, permissioner]},
          {public-key: "FmzyByBePwbKDjSdnYjwF9G12zGrQc7Gcr8WvQ5ybejC", roles: [miner]},
          {public-key: "AFCqmayq4XdGPvj1pmLFLPK6aQEVipLCUubRi3SbNo4N", roles: [miner]}
        ]
      }
    }
  }

  # Application logging level. Could be DEBUG | INFO | WARN | ERROR. Default value is INFO.
  logging-level = DEBUG

  # P2P Network settings
  network {
    # Network address
    bind-address = "0.0.0.0"
    # Port number
    port = 6864
    known-peers = [
      "node0-partnernet.vostoknodes.com:6864",
      "node1-partnernet.vostoknodes.com:6864",
      "node2-partnernet.vostoknodes.com:6864"
    ]
    # Node name to send during handshake. Comment this string out to set random node name.
    # String with IP address and port to send as external address during handshake. Could be set automatically if uPnP is enabled.
    declared-address = "0.0.0.0:6864"
  }
  
  # Node's REST API settings
  rest-api {
    enable = yes
    bind-address = "0.0.0.0"
    port = 6862
    auth {
      type: "api-key"
      api-key-hash = " /FILL/ " #api-key for all api
      privacy-api-key-hash = " /FILL/ "   #api-key for SendData api
    }
  }

  # New blocks generator settings
  miner {
    enable = yes
    quorum = 1
    interval-after-last-block-then-generation-is-allowed = 10d
    micro-block-interval = 5s
    min-micro-block-age = 3s
    max-transactions-in-micro-block = 500
    minimal-block-generation-offset = 200ms
  }

  # Anchoring
  scheduler-service.enable = no
  
  # For docker smart-contracts
  docker-engine {
    enable = no
    # Optional connection string to docker host
    # docker-host = "unix:///var/run/docker.sock"
    # Optional string to node REST API if we use remote docker host
    # node-rest-api = "https://clinton.vostokservices.com/node-0"
    execution-limits {
      timeout = 10s
      memory = 512
      memory-swap = 512
    }
  }
  
  privacy {
    # Max parallel data crawling tasks
    crawling-parallelism = 100

    # DB connection config
    storage {
      vendor = none

      ## for postgres vendor:
			# schema = "public"
			# migration-dir = "db/migration"
			# profile = "slick.jdbc.PostgresProfile$"
			# jdbc-config {
			#   url = "jdbc:postgresql://postgres:5432/node-1"
			#   driver = "org.postgresql.Driver"
			#   user = postgres
			#   password = wenterprise
			#   connectionPool = HikariCP
			#   connectionTimeout = 5000
			#   connectionTestQuery = "SELECT 1"
			#   queueSize = 10000
			#   numThreads = 20
			# }

			## for s3 vendor:
			#  url = "http://localhost:9000/"
			#  bucket = "privacy"
			#  region = "aws-global"
			#  access-key-id = "minio"
			#  secret-access-key = "minio123"
			#  path-style-access-enabled = true
			#  connection-timeout = 30s
			#  connection-acquisition-timeout = 10s
			#  max-concurrency = 200
			#  read-timeout = 0s
    }
  }

}